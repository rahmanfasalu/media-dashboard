{"version":3,"sources":["assets/logo.jpeg","theme/theme.ts","theme/CommonStyles.tsx","app/layout/footer/Footer.tsx","app/layout/header/SearchBox.tsx","app/layout/header/Header.tsx","app/shared/BuildRoute/BuildRoute.tsx","app/@modules/home/screens/Catalog/Catalog.tsx","theme/media.ts","app/constants/dashboardConstants.ts","app/hooks/useWindowDimensions.ts","app/utils/dashboardUtil.ts","app/@modules/home/screens/Dashboard/components/ChannelBar/ChannelShow.tsx","app/@modules/home/screens/Dashboard/components/ChannelBar/ChannelPrograms.tsx","app/@modules/home/screens/Dashboard/components/ChannelBar/ChannelBar.tsx","app/@modules/home/screens/Dashboard/components/TimeBar/TimeBar.tsx","app/shared/SideBar/SideBar.tsx","app/shared/TimeLine/TimeLine.tsx","app/hooks/useCurrentTimeInMinutes.ts","app/shared/Button/Button.tsx","app/shared/ProgramBanner/ProgramBanner.tsx","app/shared/ProgramHeader/ProgramHeader.tsx","app/shared/Tabs/Tabs.tsx","app/@modules/home/screens/Dashboard/components/WeekBar/WeekBar.tsx","app/@modules/home/screens/Dashboard/components/ChannelSideBar/ChannelSideBar.tsx","app/@modules/home/screens/Dashboard/components/RangeHeightSlider/RangeHeightSlider.tsx","app/@modules/home/screens/Dashboard/Dashboard.tsx","app/stor/actions/channelActions.ts","app/stor/actionTypes/channelsActionTypes.ts","app/@modules/home/screens/Rewind/Rewind.tsx","app/routes/homeRoutes.ts","app/@modules/home/screens/Landing/Landing.tsx","app/@modules/home/screens/Play/Play.tsx","app/@modules/home/Home.tsx","app/@modules/programDetails/components/ProgramSeries/ProgramSeries.tsx","app/@modules/programDetails/ProgramDetails.tsx","app/routes/appRoutes.ts","app/stor/actions/programActions.ts","app/stor/actionTypes/programsActionTypes.ts","App.tsx","serviceWorker.js","theme/GlobalStyle.tsx","app/stor/initialState.ts","app/stor/reducers/index.ts","app/stor/reducers/channelReducer.ts","app/stor/reducers/programInforReducer.ts","app/stor/configureStore.ts","index.tsx"],"names":["module","exports","Theme","colors","bg","primary","white","secondary","error","active","gray","show","button","fontSize","big","span","paragraph","small","ipadHeading","semiHeading","icon","transitions","normal","font","heading","lineHeight","steps","background","footerbg","StyledNavLink","styled","NavLink","attrs","activenavlinkclass","DisableScrollBar","div","Fa","i","size","color","ContentCenter","ScreenContainer","SemiHeader","HeaderSmall","HeaderLarge","FlexRow","P","p","FooterContainer","Footer","to","className","activeClassName","SearchWrapper","SearchButton","SearchInput","input","SearchBox","setQuery","useState","activeClass","setActiveClass","animateClass","setAnimateClass","value","setValue","type","placeholder","onChange","e","target","onKeyDown","keyCode","onKeyUp","onClick","event","aria-hidden","HeaderContainer","Logo","img","Menu","Header","src","logo","alt","BuildRoute","routes","map","key","path","component","exact","Catalog","sizes","ScreenWidth","HOUR_SIZE","getWindowDimensions","window","width","innerWidth","height","innerHeight","hourSize","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","_getMinutes","date","Date","getHours","getMinutes","getScrollableBarWidth","getMinuteSize","formatedTime","toLocaleTimeString","navigator","language","hour","minute","ChannleShow","schedule","history","useHistory","miunteSize","left","start","getShowStartPoint","end","startTimeInMinutes","getShowLength","endTimeInMinutes","currentTimeInMinute","isActiveShow","id","push","style","position","zIndex","borderRight","padding","title","ChannelProgramsContainer","ChannelPrograms","schedules","index","ChannelContainer","Channel","ChannelBar","channels","channel","getTimeText","Time","fomatedHour","TimeLabel","TimeBarContainer","TimeBar","Img","SideBarContainer","sidebarHeight","SideBar","image","TimeLineContainer","TimeLineHead","TimeLineTail","TimeLine","currenTimeInMinute","setMinute","intervalId","setInterval","clearInterval","useCurrentTimeInMinutes","ButtonStyled","Button","name","callback","ImageWrapper","Duration","ProgramBannerContainer","ProgramBanner","duration","dateObj","getshowDuration","ProgramHeaderContainer","ProgramHeader","channelTitle","meta","startDate","endDate","getDate","getMonth","year","genres","genre","TabsHeaderContainer","TabHeader","TabContent","TabsContentContainer","Tabs","tabHeads","tabcontents","setActive","head","handleClick","content","WeekBarContainer","WeekDaysContainer","WeekLabel","WeekBar","weekDays","curr","firstday","setDate","getDay","lastday","day","toString","split","getWeekDays","currDay","weekday","toLocaleLowerCase","ChannelSideBarContainer","top","ChannelSideBar","tileHeight","images","RangeSliderWrapper","RangeInput","Label","label","RangeHeightSlider","barHeight","setBarHeight","min","max","parseInt","ButtonWrapper","DashboardContainer","ProgramContainer","StreamContainer","Dashboard","dispatch","useDispatch","containerRef","React","useRef","currentScreenWidth","useSelector","state","scrollToTheCurrntShow","current","scrollLeft","currentShowScreenPosition","payload","data","offsetTop","ref","Rewind","homeRoutes","Home","ProgramSeriesContainer","EpisodeContent","ProgramSeries","series","item","getTabeTitles","episodes","episode","getTabeContent","ProgramDetails","appRoutes","match","programInfo","params","description","cast","App","Boolean","location","hostname","GlobalStyle","createGlobalStyle","initialState","otherStates","rootReducer","combineReducers","action","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","store","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b8d610aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4682c75a.jpeg\";","import { DefaultTheme } from \"styled-components\";\nconst colors = {\n  bg: \"#000000\",\n  primary: \"#000000\",\n  white: \"#fff\",\n  secondary: \"#202020\",\n  error: \"red\",\n  active: \"#fcba03\",\n  gray: \"#545454\",\n  show: \"#393939\",\n  button: \"#e1a21e\",\n};\n\nconst background = {\n  footerbg: \"#FFF\",\n};\n\nconst transitions = {\n  normal: \"0.5s\",\n};\n\nconst fontSize = {\n  big: \"6.4rem\",\n  span: \"0.9rem\",\n  paragraph: \"1.4rem\",\n  small: \"1rem\",\n  ipadHeading: \"4.4rem\",\n  semiHeading: \"1.6rem\",\n  icon: \"2rem\",\n};\n\nconst lineHeight = {\n  big: \"6.4rem\",\n  steps: \"4.6rem\",\n  semiHeading: \"2.0rem\",\n};\n\nconst font = {\n  heading: \"Tahoma\",\n  paragraph: \"Open Sans\",\n  primary: \"Open Sans\",\n};\n\nconst Theme: DefaultTheme = {\n  colors,\n  fontSize,\n  transitions,\n  font,\n  lineHeight,\n  background,\n};\n\nexport default Theme;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Theme from \"./theme\";\n\ninterface FaProps {\n  size?: string;\n  color?: string;\n}\n\nconst activenavlinkclass = \"active\";\nexport const StyledNavLink = styled(NavLink).attrs({\n  activenavlinkclass,\n})`\n  &.${activenavlinkclass} {\n    .fa {\n      color: ${Theme.colors.active};\n    }\n  }\n`;\n\nexport const DisableScrollBar = styled.div`\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n  &::-webkit-scrollbar {\n    width: 0px;\n    background: transparent; /* Chrome/Safari/Webkit */\n  }\n`;\n\nexport const Fa = styled.i<FaProps>`\n  font-size: ${({ size }) => (size ? size : \"2rem\")};\n  color: ${({ color }) => (color ? color : Theme.colors.white)};\n`;\n\nexport const ContentCenter = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ScreenContainer = styled(ContentCenter)`\n  height: 72%;\n  position: absolute;\n  width: calc(100%-160px);\n  color: #545454;\n  width: 100%;\n  font-size: 3rem;\n`;\n\nexport const SemiHeader = styled.div`\n  text-transform: uppercase;\n  color: ${Theme.colors.white};\n  font-size: 22px;\n  padding: 0 15px;\n`;\n\nexport const HeaderSmall = styled.div`\n  text-transform: capitalize;\n  color: ${Theme.colors.gray};\n  font-size: 18px;\n  padding: 0 15px;\n`;\n\nexport const HeaderLarge = styled(SemiHeader)`\n  font-size: 26px;\n  text-transform: capitalize;\n`;\nexport const FlexRow = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  margin: 5px 0;\n`;\n\nexport const P = styled.p`\n  font-size: 29px;\n  padding: 0 15px;\n  color: ${Theme.colors.gray};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Theme from \"src/theme/theme\";\nimport { StyledNavLink, Fa } from \"src/theme/CommonStyles\";\n\n/*\n *  Footer Layout\n *  Application Footer child nav link\n *  Child lick used as\n *    - Landing : Home page landing screen\n *    - Play : Home page play screen\n *    - Rewind : Home page rewind screen\n *    - Catalog : Home page catalog screen\n *    - Dashboard : Streaming info page\n */\n\nconst Footer = (): JSX.Element => (\n  <FooterContainer>\n    <StyledNavLink to=\"/home/landing\">\n      <Fa className=\"fa fa-home\" size=\"3rem\"></Fa>\n    </StyledNavLink>\n    <StyledNavLink to=\"/home/play\">\n      <Fa className=\"fa fa-play-circle\"></Fa>\n    </StyledNavLink>\n    <StyledNavLink to=\"/home/dashboard\" activeClassName=\"active\">\n      <Fa className=\"fa fa-list\"></Fa>\n    </StyledNavLink>\n    <StyledNavLink to=\"/home/rewind\">\n      <Fa className=\"fa fa-history\"></Fa>\n    </StyledNavLink>\n    <StyledNavLink to=\"/home/catalog\">\n      <Fa className=\"fa fa-book\"></Fa>\n    </StyledNavLink>\n  </FooterContainer>\n);\n\n/*\n *  Styled components\n */\nconst FooterContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  padding: 10px 0;\n  background: ${Theme.colors.secondary};\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  -webkit-box-shadow: 0px -4px 3px rgba(32, 32, 32, 1);\n  -moz-box-shadow: 0px -4px 3px rgba(32, 32, 32, 1);\n  box-shadow: 0px -4px 3px rgba(32, 32, 32, 1);\n  z-index: 999;\n  }\n`;\nexport default Footer;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Theme from \"src/theme/theme\";\n\nconst SearchBox = ({\n  setQuery,\n}: {\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n}): JSX.Element => {\n  const [activeClass, setActiveClass] = useState(\"\");\n  const [animateClass, setAnimateClass] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  return (\n    <SearchWrapper>\n      <SearchInput\n        type=\"text\"\n        placeholder=\"enter for search\"\n        className={`input ${activeClass}`}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        onKeyDown={(e) => (e.keyCode === 13 ? setQuery(value) : \"\")}\n        onKeyUp={(e) => setQuery(value)}\n      />\n      <SearchButton\n        className={`btn ${animateClass}`}\n        onClick={(event: React.MouseEvent) => {\n          if (activeClass) {\n            setAnimateClass(\"\");\n            setActiveClass(\"\");\n            setValue(\"\");\n          } else {\n            setAnimateClass(\"animate\");\n            setActiveClass(\"active\");\n          }\n        }}\n      >\n        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n      </SearchButton>\n    </SearchWrapper>\n  );\n};\n\nconst SearchWrapper = styled.div`\n  position: relative;\n  margin: 0 auto;\n  display: block;\n  height: 53px;\n  margin-top: 12px;\n`;\n\nconst SearchButton = styled.div`\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  right: 45px;\n  top: 0;\n  cursor: pointer;\n  text-align: center;\n  line-height: 50px;\n  font-size: 16px;\n  transition: all 0.8s ease;\n  border: 1px solid #fff;\n  color: ${Theme.colors.white};\n  background: ${Theme.colors.primary};\n  &.animate {\n    transform: rotate(-360deg);\n    right: 100px;\n  }\n`;\n\nconst SearchInput = styled.input`\n  position: absolute;\n  top: 10px;\n  right: 50px;\n  box-sizing: border-box;\n  width: 0px;\n  height: 35px;\n  padding: 0 20px;\n  outline: none;\n\n  border-radius: 50px;\n  color: #000;\n  border: 1px solid #fff;\n  color: ${Theme.colors.white};\n  font-size: ${Theme.fontSize.small};\n  transition: all 0.8s ease;\n  font-weight: normal;\n  &.active {\n    width: 250px;\n    right: 102px;\n  }\n`;\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport SearchBox from \"./SearchBox\";\nimport logo from \"../../../assets/logo.jpeg\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  Header Layout\n *  Application Header with icon, logo and search bar\n *\n */\nconst Header = (): JSX.Element => {\n  const [, setQuery] = useState(\"\");\n  return (\n    <HeaderContainer>\n      <Menu>\n        <Link to=\"/\">\n          <i className=\"fa fa-user\"></i>\n        </Link>\n      </Menu>\n      <Menu>\n        <Logo src={logo} alt=\"logo\"></Logo>\n      </Menu>\n\n      <Menu>\n        <SearchBox setQuery={setQuery} />\n      </Menu>\n    </HeaderContainer>\n  );\n};\n\n/*\n *  Styled components\n */\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 0;\n  height: 80px;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  z-index: 999;\n`;\n\nconst Logo = styled.img`\n  width: 80px;\n  height: 60px;\n`;\nconst Menu = styled.div`\n  .fa-user {\n    font-size: 45px;\n    color: ${Theme.colors.white};\n    margin-top: 10px;\n    margin-left: 15px;\n  }\n`;\nexport default Header;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport RouteType from \"../../interfaces/route.type\";\n\n/*\n *  Shared: Build Route\n *  This will build route the routes based on the RouteType\n */\nfunction BuildRoute({ routes }: { routes: RouteType[] }): JSX.Element {\n  return (\n    <>\n      {routes.map(({ path, component, exact }: RouteType, key) => (\n        <Route\n          exact={exact ? exact : false}\n          path={path}\n          component={component}\n          key={key}\n        />\n      ))}\n    </>\n  );\n}\nexport default BuildRoute;\n","import React from \"react\";\nimport { ScreenContainer } from \"src/theme/CommonStyles\";\n\n/*\n *  Catalog Screen\n */\nfunction Catalog(): JSX.Element {\n  return <ScreenContainer>Catalog Screen</ScreenContainer>;\n}\n\nexport default Catalog;\n","const sizes = {\n  smallpc: \"1400px\",\n  ipadpro: \"1024px\",\n  ipad: \"768px\",\n\n  tablet: \"1200px\",\n  tabletSmall: \"680px\",\n  portraitTablet: \"600px\",\n\n  phone: \"600px\",\n  iphone: \"420px\",\n  maxMobileWidth: \"525px\",\n};\n\n// Used to calculate the hour size;\nexport const ScreenWidth = {\n  large: 2000,\n  pc: 800,\n  meduim: 600,\n  small: 400,\n  extraSmall: 300,\n};\n\nexport const Media = {\n  phone: `(max-width: ${sizes.phone})`,\n  tablet: `(max-width: ${sizes.tablet})`,\n  ipadpro: `(max-width: ${sizes.ipadpro})`,\n  ipad: `(max-width: ${sizes.ipad})`,\n  iphone: `(max-width: ${sizes.iphone})`,\n  smallpc: `(max-width: ${sizes.smallpc})`,\n  tabletSmall: `(max-width: ${sizes.tabletSmall})`,\n  maxMobileWidth: `(max-width: ${sizes.maxMobileWidth})`,\n};\n","/*\n *  Hour Size\n *  Each show postion will be calculated based on the hour size.\n *  This hoursize will vary for the responsive porpose\n */\nexport const HOUR_SIZE = {\n  extraLarge: 800,\n  lageScreen: 600,\n  mediumScreen: 500,\n  smallScreen: 300,\n  extraSmallScreen: 250,\n};\n\n/*\n *  Service API\n */\nexport const API = {\n  epg: \"/channels\",\n  programInfo: \"/programInfo/$$\",\n};\n","import { useState, useEffect } from \"react\";\n\nimport { ScreenWidth } from \"src/theme/media\";\nimport { HOUR_SIZE } from \"../constants/dashboardConstants\";\n\n/*\n *  HOOK: WindowDimension\n *  This will trigger on every resize with new window width, height and with the new hoursize.\n *  The hour size will be calcualted based on the screen size for responsiveness\n */\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  let hourSize: number;\n  if (width >= ScreenWidth.large) {\n    hourSize = HOUR_SIZE.extraLarge;\n  } else if (width >= ScreenWidth.pc) {\n    hourSize = HOUR_SIZE.lageScreen;\n  } else if (width >= ScreenWidth.meduim) {\n    hourSize = HOUR_SIZE.mediumScreen;\n  } else if (width >= ScreenWidth.small) {\n    hourSize = HOUR_SIZE.smallScreen;\n  } else {\n    hourSize = HOUR_SIZE.extraSmallScreen;\n  }\n  return {\n    width,\n    height,\n    hourSize,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import WeekDays from \"../interfaces/weekdays.type\";\n\n/*\n * Get the time in minute\n *\n * Get the total time in minutes, if no argument provided then it will\n * return the minutes in current day\n */\nfunction _getMinutes(date?: string): number {\n  if (date) {\n    return new Date(date).getHours() * 60 + new Date(date).getMinutes();\n  } else {\n    return new Date().getHours() * 60 + new Date().getMinutes();\n  }\n}\n\n/*\n * Get the current weekdays\n *\n * Get the current weekdays from sunday to saturday\n */\nexport const getWeekDays = (): WeekDays[] => {\n  const weekDays: WeekDays[] = [];\n  const curr: Date = new Date();\n  const firstday: Date = new Date(curr.setDate(curr.getDate() - curr.getDay()));\n  const lastday: Date = new Date(\n    curr.setDate(curr.getDate() - curr.getDay() + 6)\n  );\n  for (\n    const day: Date = firstday;\n    day <= lastday;\n    day.setDate(day.getDate() + 1)\n  ) {\n    weekDays.push({\n      name: day.toString().split(\" \")[0],\n      date: day.getDate() + \".\" + day.getMonth(),\n    });\n  }\n  return weekDays;\n};\n\n/*\n * Get the scrollbar width\n *\n */\nexport const getScrollableBarWidth = (hourSize: number): number => {\n  return 24 * hourSize;\n};\n\n/*\n * Get the minute size\n *\n */\nexport const getMinuteSize = (hourSize: number): number => {\n  return hourSize / 60;\n};\n\n/*\n * Get the minute size\n *\n */\nexport const currentShowScreenPosition = (\n  hourSize: number,\n  currentScreenWidth: number\n): number => {\n  const startTimeInMinutes = _getMinutes();\n\n  return getMinuteSize(hourSize) * startTimeInMinutes - currentScreenWidth / 2;\n};\n\n/*\n * Calcualte the show start length\n *\n * Converte the tim of the day in mintes and multiply with minute size to\n * get the start length.\n */\nexport const getShowStartPoint = (\n  miunteSize: number,\n  start: string\n): number => {\n  const startTimeInMinutes = _getMinutes(start);\n  return miunteSize * startTimeInMinutes;\n};\n\n/*\n * Calcualte the show width\n *\n * Calculate the width of the show start and end time,\n * Assuming start time is always less than end time\n */\nexport const getShowLength = (\n  miunteSize: number,\n  start: string,\n  end: string\n): number => {\n  const startTimeInMinutes = _getMinutes(start);\n  const endTimeInMinutes = _getMinutes(end);\n  const diff = endTimeInMinutes - startTimeInMinutes;\n  return diff * miunteSize;\n};\n\n/*\n * Check the active show\n *\n * If the show is currently running then return true, else return false\n * Assuming start time is always less than end time\n */\nexport const isActiveShow = (start: string, end: string): boolean => {\n  const startTimeInMinutes = _getMinutes(start);\n  const endTimeInMinutes = _getMinutes(end);\n  const currentTimeInMinute = _getMinutes();\n  if (\n    startTimeInMinutes <= currentTimeInMinute &&\n    currentTimeInMinute <= endTimeInMinutes\n  ) {\n    return true;\n  }\n  return false;\n};\n\n/*\n * Formated time\n * Get ime in HH:MM formate\n */\nexport const formatedTime = (date: string): string => {\n  var dateObj = new Date(date);\n  return dateObj.toLocaleTimeString(navigator.language, {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n\n/*\n * Formated time\n * Get ime in HH:MM formate\n */\nexport const getshowDuration = (start: string, end: string): string => {\n  var dateObj = (new Date(end) as any) - (new Date(start) as any);\n  return new Date(dateObj).toLocaleTimeString(navigator.language, {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport useWindowDimensions from \"src/app/hooks/useWindowDimensions\";\nimport {\n  getMinuteSize,\n  getShowStartPoint,\n  getShowLength,\n  isActiveShow,\n  formatedTime,\n} from \"src/app/utils/dashboardUtil\";\nimport { Schedule } from \"src/app/interfaces/channels.type\";\nimport Theme from \"src/theme/theme\";\n\n/*\n * Interface\n *\n * Styled component props\n */\ninterface ShowStyledProps {\n  left: number;\n  width: number;\n  active: boolean;\n}\n\n/*\n * Show Components\n *\n * For render single show\n */\nconst ChannleShow = ({ schedule }: { schedule: Schedule }): JSX.Element => {\n  // get the hoursize based on the screen size;\n  const { hourSize } = useWindowDimensions();\n  const history = useHistory();\n  const miunteSize: number = getMinuteSize(hourSize);\n  const left: number = getShowStartPoint(miunteSize, schedule.start);\n  const width: number = getShowLength(miunteSize, schedule.start, schedule.end);\n  const active: boolean = isActiveShow(schedule.start, schedule.end);\n\n  const viewDetails = () => {\n    let path = `/show/${schedule.id}`;\n    history.push(path);\n  };\n\n  return (\n    // Prefer inline styles for better performance over styled component\n    <div\n      onClick={viewDetails}\n      style={{\n        position: \"absolute\",\n        left: left + \"px\",\n        width: width - 1 + \"px\",\n        background: active ? Theme.colors.show : Theme.colors.bg,\n        zIndex: 10,\n        height: `100%`,\n        borderRight: `1px solid ${Theme.colors.gray}`,\n      }}\n    >\n      <div\n        style={{\n          padding: \"5px 0 0 5px\",\n          color: Theme.colors.white,\n          width: \"100%\",\n        }}\n      >\n        {schedule.title}\n      </div>\n      <div\n        style={{\n          padding: \"5px 0 0 5px\",\n          color: Theme.colors.gray,\n        }}\n      >{`${formatedTime(schedule.start)} - \n      ${formatedTime(schedule.end)}`}</div>\n    </div>\n  );\n};\n\nexport default ChannleShow;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ChannleShow from \"./ChannelShow\";\nimport { Schedule } from \"src/app/interfaces/channels.type\";\n\n/*\n * Channel Programs Components\n *\n * Component will render each programs\n * Active program will highlighted in gray\n */\nconst ChannelPrograms = ({\n  schedules,\n}: {\n  schedules: Schedule[];\n}): JSX.Element => {\n  return (\n    <ChannelProgramsContainer>\n      {schedules.map(\n        (schedule: Schedule, index: number): JSX.Element => {\n          return (\n            <ChannleShow\n              schedule={schedule}\n              key={`ChannleShow_${index}`}\n            ></ChannleShow>\n          );\n        }\n      )}\n    </ChannelProgramsContainer>\n  );\n};\n\n/**\n *  Styles components\n */\nconst ChannelProgramsContainer = styled.div``;\n\nexport default ChannelPrograms;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ChannelPrograms from \"./ChannelPrograms\";\nimport { Channels } from \"src/app/interfaces/channels.type\";\nimport Theme from \"src/theme/theme\";\n\n/*\n * Channel Bar Component\n *\n * Component will render the all the programs based props channels.\n * Programs size is calcualted bases on the hour size.\n */\n\n/**\n *  Component props\n */\ninterface ChannelProp {\n  channels: Channels[];\n  height: number;\n}\nconst ChannelBar = ({ channels, height }: ChannelProp): JSX.Element => {\n  return (\n    <ChannelContainer>\n      {channels.map(\n        (channel: Channels, index: number): JSX.Element => {\n          return (\n            <Channel key={`Channel_${index}`} height={height}>\n              <ChannelPrograms\n                schedules={channel.schedules}\n                key={`Programs_${index}`}\n              />\n            </Channel>\n          );\n        }\n      )}\n    </ChannelContainer>\n  );\n};\n\n/**\n *  Styles components\n */\nconst ChannelContainer = styled.div`\n  position: relative;\n  z-index: 90;\n`;\nconst Channel = styled.div<{ height: number }>`\n  width: 100%;\n  cursor: pointer;\n  padding: 0;\n  height: ${({ height }) => height + \"px\"};\n  position: relative;\n  background: ${Theme.colors.bg};\n  border-bottom: 1px solid ${Theme.colors.gray};\n`;\n\nexport default ChannelBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Theme from \"src/theme/theme\";\nimport useWindowDimensions from \"src/app/hooks/useWindowDimensions\";\n\n/*\n * Time Bar Component\n *\n * Component will render the Timeline based on the hoursize props.\n * Each hour size is calcualted based on the hoursize and actual hour\n */\n\n/**\n *  Styled components props\n */\ninterface TimeLabelProps {\n  left: number;\n}\n\nconst TimeBar = () => {\n  const { hourSize } = useWindowDimensions();\n  return <TimeBarContainer>{getTimeText(hourSize)}</TimeBarContainer>;\n};\n\n/**\n *  Helper function to render time\n */\nconst getTimeText = (hourSize: number): JSX.Element[] => {\n  const Time: JSX.Element[] = [];\n  for (let hour: number = 1; hour < 24; hour++) {\n    let fomatedHour: string = hour < 9 ? \"0\" + hour + \":00\" : hour + \":00\";\n    Time.push(\n      <TimeLabel key={fomatedHour} left={hour * hourSize}>\n        {fomatedHour}\n      </TimeLabel>\n    );\n  }\n  return Time;\n};\n\n/**\n *  Styled Components\n */\nconst TimeLabel = styled.div<TimeLabelProps>`\n  left: ${({ left }) => {\n    return left + \"px\";\n  }};\n  position: absolute;\n  color: ${Theme.colors.white};\n`;\nconst TimeBarContainer = styled.div`\n  cursor: pointer;\n  padding: 15px 0px;\n  height: 23px;\n  position: relative;\n  background: ${Theme.colors.secondary};\n  border-top: 1px solid ${Theme.colors.gray};\n  border-bottom: 1px solid ${Theme.colors.gray};\n`;\n\nexport default TimeBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Fa, ContentCenter } from \"src/theme/CommonStyles\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  Shared: SideBar\n *  Shared Sticky sidebar with icon || image. The content will be align in the center\n */\n\n// Component type interface\ninterface SideBarType {\n  image?: string;\n  icon?: string;\n  height?: number;\n}\nconst SideBar = ({ image, icon, height }: SideBarType): JSX.Element => {\n  return (\n    <SideBarContainer sidebarHeight={height ?? 70}>\n      {image && <Img src={image} alt=\"\" />}\n      {!image && icon && <Fa className={`${icon} fa`}></Fa>}\n    </SideBarContainer>\n  );\n};\n\n/*\n *  Styled Components\n */\nconst Img = styled.img`\n  width: 50px;\n  height: auto;\n  max-height: 80%;\n`;\n\nconst SideBarContainer = styled(ContentCenter)<{ sidebarHeight: number }>`\n  width: 100px;\n  background: ${Theme.colors.secondary};\n  left: 0;\n  box-shadow: 10px 0 10px 1px ${Theme.colors.primary};\n  height: ${({ sidebarHeight }) =>\n    sidebarHeight ? sidebarHeight + \"px\" : \"70px\"};\n  z-index: 100;\n  cursor: pointer;\n  position: relative;\n  margin-bottom: 1px;\n`;\n\nexport default SideBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useCurrentTimeInMinutes from \"src/app/hooks/useCurrentTimeInMinutes\";\nimport useWindowDimensions from \"src/app/hooks/useWindowDimensions\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  Shared: TimeLine\n *  Time Line Component, this is an indicator for the current time. This will change\n *  the position in every 1 minute\n */\n\ninterface TimelineStyledProps {\n  left: number;\n}\nconst TimeLine = (): JSX.Element => {\n  const { minute } = useCurrentTimeInMinutes();\n  const { hourSize } = useWindowDimensions();\n  const left: number = minute * (hourSize / 60);\n  return (\n    <TimeLineContainer left={left}>\n      <TimeLineHead></TimeLineHead>\n      <TimeLineTail></TimeLineTail>\n    </TimeLineContainer>\n  );\n};\n\n/*\n *  Styled Components\n */\nconst TimeLineContainer = styled.div<TimelineStyledProps>`\n  width: 6px;\n  top: 0;\n  bottom: 50px;\n  position: absolute;\n  z-index: 150;\n  transition: left 1s cubic-bezier(0, 0, 1, 1) 500ms;\n  left: ${({ left }) => (left ? `${left}px` : 0)};\n`;\n\nconst TimeLineHead = styled.div`\n  width: 5px;\n  background: ${Theme.colors.button};\n  height: 54px;\n  border-radius: 2px;\n  position: absolute;\n`;\n\nconst TimeLineTail = styled.div`\n  height: 100%;\n  background: ${Theme.colors.button};\n  width: 2px;\n  margin-left: 1px;\n  position: absolute;\n`;\n\nexport default TimeLine;\n","import { useState, useEffect } from \"react\";\n\n/*\n *  HOOK: Minute Trigger\n *  This will trigger every minute with current day time in minute.\n *  ie:1 for 00:01 and 1440 for 24:00, minute will reset every day\n */\nexport default function useCurrentTimeInMinutes() {\n  const currenTimeInMinute =\n    new Date().getHours() * 60 + new Date().getMinutes();\n  const [minute, setMinute] = useState(currenTimeInMinute);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setMinute(minute + 1);\n      //reset day\n      if (minute > 1440) {\n        setMinute(0);\n      }\n    }, 60000);\n    return () => clearInterval(intervalId);\n  }, [minute]);\n\n  return { minute };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  Shared: Button\n *  Shared Button with name and callbal\n */\n\n// Component props interface\ninterface ButtonProps {\n  name: string;\n  callback: () => void;\n}\n\nconst Button = ({ name, callback }: ButtonProps): JSX.Element => {\n  return (\n    <ButtonStyled\n      onClick={() => {\n        callback();\n      }}\n    >\n      Now\n    </ButtonStyled>\n  );\n};\n\n/*\n *  Styled Component\n */\nconst ButtonStyled = styled.button`\n  border: none;\n  background: ${Theme.colors.button};\n  color: ${Theme.colors.white};\n  padding: 10px 18px;\n  width: auto;\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n  font-size: 20px;\n  border-radius: 5px;\n  &:hover {\n    transform: translateY(-7px);\n  }\n`;\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { getshowDuration } from \"src/app/utils/dashboardUtil\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  Shared: ProgramBanner\n *  Program large banner with show duration\n */\n\n// Component type interface\ninterface ProgramBannerType {\n  image: string;\n  start: string;\n  end: string;\n  title: string;\n}\nconst ProgramBanner = ({\n  image,\n  title,\n  start,\n  end,\n}: ProgramBannerType): JSX.Element => {\n  const duration: string = getshowDuration(start, end);\n  return (\n    <ProgramBannerContainer>\n      {/* For image and show duration */}\n      <ImageWrapper>\n        <Img src={image} alt={title}></Img>\n        <Duration>{duration}</Duration>\n        <div className=\"shadow\"></div>\n      </ImageWrapper>\n    </ProgramBannerContainer>\n  );\n};\n\n/*\n *  Styled Components\n */\nconst ImageWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\nconst Duration = styled.div`\n  position: absolute;\n  z-index: 99;\n  color: ${Theme.colors.white};\n  right: 0;\n  background-color: rgba(65, 62, 62, 0.65);\n  padding: 5px 10px;\n  width: 140px;\n  font-size: 2rem;\n  align-items: center;\n`;\nconst Img = styled.img`\n  max-width: 100%;\n`;\nconst ProgramBannerContainer = styled.div`\n  width: auto;\n  text-align: center;\n`;\n\nexport default ProgramBanner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ProgramInfo } from \"src/app/interfaces/programs.details.type\";\nimport {\n  SemiHeader,\n  HeaderSmall,\n  FlexRow,\n  HeaderLarge,\n} from \"src/theme/CommonStyles\";\n\n/*\n *  Shared: ProgramTitle\n *  Program title with channle name, duration, day, program titlee,\n *  year and genre\n */\n\nconst ProgramHeader = ({\n  channelTitle,\n  start,\n  end,\n  title,\n  meta,\n}: ProgramInfo): JSX.Element => {\n  const months: string[] = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n\n  return (\n    <ProgramHeaderContainer>\n      <FlexRow>\n        <SemiHeader>{channelTitle}</SemiHeader>\n        <HeaderSmall>\n          {startDate.getHours() +\n            \":\" +\n            startDate.getMinutes() +\n            \" - \" +\n            endDate.getHours() +\n            \":\" +\n            endDate.getMinutes() +\n            \" -\" +\n            startDate.getDate() +\n            \" \" +\n            months[startDate.getMonth()]}\n        </HeaderSmall>\n      </FlexRow>\n      <FlexRow>\n        <HeaderLarge>{title}</HeaderLarge>\n      </FlexRow>\n      <FlexRow>\n        <HeaderSmall>{meta?.year}</HeaderSmall>\n        {meta?.genres?.map((genre, index) => (\n          <HeaderSmall key={`genre_${index}`}>{genre}</HeaderSmall>\n        ))}\n      </FlexRow>\n    </ProgramHeaderContainer>\n  );\n};\n\n/*\n *  Styled Components\n */\nconst ProgramHeaderContainer = styled.div`\n  width: auto;\n  padding: 10px 0;\n`;\n\nexport default ProgramHeader;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  Shared: Tabs Using Styled Component\n *  Custom tab bar using styled component\n */\n\ninterface TabPropsStyled {\n  active?: boolean;\n}\ninterface TabProps {\n  tabHeads: string[];\n  tabcontents: JSX.Element[];\n}\nfunction Tabs({ tabHeads, tabcontents }: TabProps) {\n  const [active, setActive] = useState(0);\n\n  const handleClick = (index: number) => {\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n\n  return (\n    <>\n      {/* Tab header loop */}\n      <TabsHeaderContainer>\n        {tabHeads?.map((head, index) => (\n          <TabHeader\n            key={`tabH_${index}`}\n            onClick={() => {\n              handleClick(index);\n            }}\n            active={active === index}\n          >\n            {head}\n          </TabHeader>\n        ))}\n      </TabsHeaderContainer>\n\n      {/* Tab content loop, each element as JSX elem */}\n      <TabsContentContainer>\n        {tabcontents?.map((content, index) => (\n          <TabContent active={active === index} key={`tabContent_${index}`}>\n            {content}\n          </TabContent>\n        ))}\n      </TabsContentContainer>\n    </>\n  );\n}\n\n/*\n *  Styled components\n */\nexport const TabsHeaderContainer = styled.div``;\nexport const TabHeader = styled.div<TabPropsStyled>`\n  cursor: pointer;\n  position: relative;\n  border: 1px solid ${Theme.colors.gray};\n  transition: background-color 0.5s ease-in-out;\n  color: ${Theme.colors.white};\n  float: left;\n  font-size: 18px;\n  padding: 8px;\n  margin-right: 10px;\n  background: ${({ active }) => (active ? Theme.colors.gray : \"\")};\n`;\n\nexport const TabContent = styled.div<TabPropsStyled>`\n  ${({ active }) => (active ? \"\" : \"display:none\")};\n  color: ${Theme.colors.white};\n  width: 80%;\n`;\n\nconst TabsContentContainer = styled.div`\n  width: 100%;\n  float: left;\n`;\nexport default Tabs;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SideBar } from \"src/app/shared\";\nimport WeekDays from \"src/app/interfaces/weekdays.type\";\nimport Theme from \"src/theme/theme\";\nimport { getWeekDays } from \"src/app/utils/dashboardUtil\";\n\n/*\n * WeekBar Component\n *\n * Component will render the Weekdays.\n * Current day will be highlighted in white, others in gray. component using utility funciton getWeekDays()\n * to get the weekdays\n */\n\n/**\n *  Styled components props\n */\ninterface WeekDaysProps {\n  active?: boolean;\n}\n\nconst WeekBar = (): JSX.Element => {\n  const weekDays: WeekDays[] = getWeekDays();\n  const currDay: string = new Date().toString().split(\" \")[0];\n  return (\n    <div>\n      <WeekBarContainer height={70}>\n        <SideBar icon=\"fa-star\" height={70} />\n        {weekDays.map((weekday: WeekDays) => {\n          return (\n            <WeekDaysContainer\n              key={weekday.name}\n              active={\n                currDay.toLocaleLowerCase() === weekday.name.toLocaleLowerCase()\n              }\n            >\n              <WeekLabel>{weekday.name}</WeekLabel>\n              <WeekLabel>{weekday.date}</WeekLabel>\n            </WeekDaysContainer>\n          );\n        })}\n      </WeekBarContainer>\n    </div>\n  );\n};\n\n/**\n *  Styled components\n */\nconst WeekBarContainer = styled.div<{ height: number }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${Theme.colors.secondary};\n  padding: 0;\n  position: relative;\n  height: ${(height) => height + \"px\"};\n`;\n\nconst WeekDaysContainer = styled.div<WeekDaysProps>`\n  flex: 1;\n  text-align: center;\n  color: ${({ active }) => {\n    return active ? Theme.colors.white : Theme.colors.gray;\n  }};\n`;\n\nconst WeekLabel = styled.div``;\n\nexport default WeekBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SideBar } from \"src/app/shared\";\nimport { Channels } from \"src/app/interfaces/channels.type\";\n\n/*\n * Channel Side Component\n * This componet will render all channel sidebar,\n * This is moved out as a separate component instead of putting each side bar inside the\n * channel bar for maintainability\n *\n * Postion top calculated dynamically since channel bar will support dynamic height &&\n * Side bar position will be calculated by the show container offset + weekbar height\n */\n\n/**\n *  Component props\n */\ninterface ChannelSideBarProp {\n  channels: Channels[];\n  top?: number; // for dynamic height poisitoning\n  tileHeight?: number; // dynmic sidebat height\n}\nconst ChannelSideBar = ({\n  channels,\n  top,\n  tileHeight,\n}: ChannelSideBarProp): JSX.Element => {\n  return (\n    <ChannelSideBarContainer top={top ? top + 53 : 225}>\n      {channels.map(\n        (channel: Channels, index: number): JSX.Element => {\n          return (\n            <SideBar\n              image={channel.images.logo}\n              key={`SideBar_${index}`}\n              height={tileHeight}\n            />\n          );\n        }\n      )}\n    </ChannelSideBarContainer>\n  );\n};\n\n/**\n *  Styles components\n */\nconst ChannelSideBarContainer = styled.div<{ top: number }>`\n  position: absolute;\n  z-index: 999;\n  top: ${({ top }) => top + \"px\"};\n`;\n\nexport default ChannelSideBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  Shared: Range Slider\n *  Dynamic height for the channle bar\n */\nconst RangeHeightSlider = ({\n  barHeight,\n  setBarHeight,\n}: {\n  barHeight: number;\n  setBarHeight: React.Dispatch<React.SetStateAction<number>>;\n}): JSX.Element => {\n  return (\n    <RangeSliderWrapper>\n      <Label>Channel Height :</Label>\n      <RangeInput\n        type=\"range\"\n        min=\"70\"\n        max=\"250\"\n        value={barHeight}\n        onChange={(e) => setBarHeight(parseInt(e.target.value))}\n      />\n    </RangeSliderWrapper>\n  );\n};\n\nconst RangeSliderWrapper = styled.div`\n  position: absolute;\n  z-index: 2000;\n  top: 73px;\n  right: 2rem;\n`;\n\nconst RangeInput = styled.input`\n  cursor: pointer;\n  padding: 0;\n`;\n\nconst Label = styled.label`\n  color: ${Theme.colors.white};\n  float: left;\n`;\n\nexport default RangeHeightSlider;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  WeekBar,\n  TimeBar,\n  ChannelBar,\n  ChannelSideBar,\n  RangeHeightSlider,\n} from \"./components\";\nimport {\n  currentShowScreenPosition,\n  getScrollableBarWidth,\n} from \"src/app/utils/dashboardUtil\";\nimport { Button, TimeLine } from \"src/app/shared\";\nimport { DisableScrollBar } from \"src/theme/CommonStyles\";\nimport { Channels } from \"src/app/interfaces/channels.type\";\nimport useWindowDimensions from \"src/app/hooks/useWindowDimensions\";\nimport { loadChannelData } from \"src/app/stor/actions/channelActions\";\nimport { AppStateType } from \"src/app/interfaces/app.state.type\";\n\n/*\n *  Screen Dashboard\n *\n *  Dashboard screen with channels and programs info\n *  Component used in this moduels are\n *    - WeekBar : For rendering week days.\n *    - TimeBar : For rendering Timline of 0-24 hour, hour length is calculated based on the\n *                hoursize, default hour size is 300px.\n *    - ChannelBar : For rendering channled and programs info.\n *    - Channel Sidebar : one component to render all the sidebar\n *\n */\n\n/*\n *  Styled Components interface\n */\ninterface StreanContainerProps {\n  width: string;\n}\nfunction Dashboard(): JSX.Element {\n  const dispatch = useDispatch();\n  const containerRef = React.useRef<HTMLDivElement | null>(null);\n  const [barHeight, setBarHeight] = useState<number>(70);\n\n  // get the hoursize based on the screen size;\n  const { hourSize, width: currentScreenWidth } = useWindowDimensions();\n\n  // channel selector from App state\n  const channels: Channels[] = useSelector((state: AppStateType) => {\n    return state.channels;\n  });\n\n  /*\n   *  Scroll to current show position\n   *\n   *  function will calcualte the position of the current show and scroll the screen to the\n   *  same position\n   */\n  const scrollToTheCurrntShow = () => {\n    if (channels && containerRef && containerRef.current) {\n      containerRef.current.scrollLeft = currentShowScreenPosition(\n        hourSize,\n        currentScreenWidth\n      );\n    }\n  };\n\n  // React hook to fetch channle data\n  useEffect(() => {\n    dispatch(loadChannelData());\n  }, [dispatch]);\n\n  // React hook to scroll to the current show position, if the hoursize or channles data changed\n  useEffect(() => {\n    scrollToTheCurrntShow();\n  }, [channels, hourSize]);\n  return (\n    <DashboardContainer>\n      {/* \n           For Dynamic height for channel, not is scope\n           */}\n      <RangeHeightSlider barHeight={barHeight} setBarHeight={setBarHeight} />\n\n      {/* \n           Weekbar with current days of the week\n           */}\n      <WeekBar />\n\n      {/* \n           Channle sidebars\n           */}\n      <ChannelSideBar\n        channels={channels}\n        tileHeight={barHeight}\n        top={containerRef?.current?.offsetTop}\n      />\n\n      <ProgramContainer ref={containerRef}>\n        <StreamContainer width={`${getScrollableBarWidth(hourSize)}px`}>\n          {/* \n            Realtime timeline, position will change everyminute\n           */}\n          <TimeLine></TimeLine>\n\n          {/* \n            Time Header with 00 to 23, each hour size is calculated based on the screen size. \n           */}\n          <TimeBar></TimeBar>\n\n          {/* Channel data */}\n          <ChannelBar channels={channels} height={barHeight}></ChannelBar>\n        </StreamContainer>\n      </ProgramContainer>\n\n      {/* \n             Button Now, for to slide to the current show section\n           */}\n      <ButtonWrapper>\n        <Button name=\"Now\" callback={scrollToTheCurrntShow} />\n      </ButtonWrapper>\n    </DashboardContainer>\n  );\n}\n\n/*\n *  Styled Components\n */\nconst ButtonWrapper = styled.div`\n  position: fixed;\n  bottom: 75px;\n  right: 50px;\n  z-index: 999;\n`;\nconst DashboardContainer = styled.div`\n  margin-top: 100px;\n`;\nconst ProgramContainer = styled(DisableScrollBar)`\n  overflow: scroll;\n  position: relative;\n  scroll-behavior: smooth;\n`;\nconst StreamContainer = styled(DisableScrollBar)<StreanContainerProps>`\n  width: ${({ width }) => {\n    return width ? width : \"7200px\";\n  }};\n  padding-bottom: 50px;\n`;\nexport default Dashboard;\n","import { Channels } from \"../../interfaces/channels.type\";\nimport * as types from \"../actionTypes/channelsActionTypes\";\nimport { epgServices } from \"../../../services/epgServices\";\nimport { API } from \"../../constants/dashboardConstants\";\nimport data from \"./channels.json\";\nexport const loadDataActionSuccess = (\n  data: Channels[]\n): types.channelsActionTypes => {\n  return {\n    type: types.LOAD_PROGRAMS_ACTION_SUCCESS,\n    payload: data,\n  };\n};\n\nexport const loadDataAction = (): types.channelsActionTypes => {\n  return {\n    type: types.FETCH_PROGRAMS_ACTION,\n  };\n};\n\nexport function loadChannelData() {\n  return function (dispatch: (arg0: any) => void) {\n    dispatch(loadDataAction());\n    dispatch(loadDataActionSuccess(data.channels));\n    // epgServices.fetchEpgData(API.epg).then((data: { channels: Channels[] }) => {\n    //   dispatch(loadDataActionSuccess(data.channels));\n    // });\n  };\n}\n","import { Channels } from \"../../interfaces/channels.type\";\n\nexport const LOAD_PROGRAMS_ACTION_SUCCESS = \"LOAD_PROGRAMS_ACTION_SUCCESS\";\nexport const FETCH_PROGRAMS_ACTION = \"FETCH_PROGRAMS_ACTION\";\n\nexport interface fetchChannelsActionType {\n  type: typeof FETCH_PROGRAMS_ACTION;\n}\nexport interface LoadChannelsActionType {\n  type: typeof LOAD_PROGRAMS_ACTION_SUCCESS;\n  payload: Channels[];\n}\n\nexport type channelsActionTypes =\n  | LoadChannelsActionType\n  | fetchChannelsActionType;\n","import React from \"react\";\nimport { ScreenContainer } from \"src/theme/CommonStyles\";\n\n/*\n *  Rewind Screen\n */\nfunction Rewind(): JSX.Element {\n  return <ScreenContainer>Rewind Screen</ScreenContainer>;\n}\n\nexport default Rewind;\n","import {\n  Dashboard,\n  Landing,\n  Play,\n  Catalog,\n  Rewind,\n} from \"../@modules/home/screens\";\nimport RouteType from \"../interfaces/route.type\";\n\nexport const homeRoutes: RouteType[] = [\n  { path: \"/\", exact: true, component: Dashboard },\n  { path: \"/home\", exact: true, component: Dashboard },\n  { path: \"/home/landing\", exact: false, component: Landing },\n  { path: \"/home/play\", exact: false, component: Play },\n  { path: \"/home/dashboard\", exact: false, component: Dashboard },\n  { path: \"/home/catalog\", exact: false, component: Catalog },\n  { path: \"/home/rewind\", exact: false, component: Rewind },\n];\n\nexport default homeRoutes;\n","import React from \"react\";\n\n/*\n *  Landing Screen\n */\nfunction Landing(): JSX.Element {\n  return (\n    <div>\n      <img\n        src=\"https://img.noriginmedia.com/cloudberry/categories_vikings.jpg\"\n        alt=\"vikings\"\n        width={\"100%\"}\n      />\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { ScreenContainer } from \"src/theme/CommonStyles\";\n\n/*\n *  Play Screen\n */\nfunction Play(): JSX.Element {\n  return <ScreenContainer>Play Screen</ScreenContainer>;\n}\n\nexport default Play;\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { homeRoutes } from \"../../routes\";\n\nimport { Footer } from \"src/app/layout\";\nimport BuildRoute from \"src/app/shared/BuildRoute/BuildRoute\";\n\n/*\n * Module Home\n *\n * Landiing page Module\n * Screens in this modules:\n *  - DashBoards : Channles and Programs info\n *  - Play\n *  - Rewind\n *  - Landing\n *  - Catalog\n */\n\nconst Home = (): JSX.Element => {\n  return (\n    <>\n      <Switch>\n        <BuildRoute routes={homeRoutes} />\n      </Switch>\n      <Footer />\n    </>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Series, Episodes } from \"src/app/interfaces/programs.details.type\";\nimport Tabs from \"src/app/shared/Tabs/Tabs\";\nimport Theme from \"src/theme/theme\";\n\n/*\n *  ProgramSeries Component\n *  Wrapper component for program series\n *  The component will accept program series and return a tab with series title and content.\n */\nconst ProgramSeries = ({ series }: { series: Series[] }): JSX.Element => {\n  const getTabeTitles = (series: Series[]): string[] => {\n    return series?.map((item) => item.title);\n  };\n\n  /*\n   * Create Array of jsx element from input data\n   */\n  const getTabeContent = (series: Series[]): JSX.Element[] => {\n    return series?.map((item, index) => {\n      return (\n        <div key={`series_${index}`}>\n          <h2>Episodes</h2>\n          {item.episodes.map((episode: Episodes, index) => (\n            <EpisodeContent key={`episodes_${index}`}>\n              {episode.title}\n            </EpisodeContent>\n          ))}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <ProgramSeriesContainer>\n      {/* Tab component with title and content as jsx ele array */}\n      <Tabs\n        tabHeads={getTabeTitles(series)}\n        tabcontents={getTabeContent(series)}\n      ></Tabs>\n    </ProgramSeriesContainer>\n  );\n};\n\n/*\n * Styled components\n */\nconst ProgramSeriesContainer = styled.div`\n  padding: 25px 15px;\n`;\n\nconst EpisodeContent = styled.div`\n  color: ${Theme.colors.white};\n  width: 100%;\n  padding: 10px 0;\n  border-bottom: 1px solid ${Theme.colors.gray};\n`;\nexport default ProgramSeries;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { loadProgramDetailsActions } from \"src/app/stor/actions/programActions\";\nimport { ProgramInfo } from \"src/app/interfaces/programs.details.type\";\nimport { AppStateType } from \"src/app/interfaces/app.state.type\";\nimport ProgramBanner from \"src/app/shared/ProgramBanner/ProgramBanner\";\nimport { ProgramHeader } from \"src/app/shared\";\nimport { P, FlexRow, HeaderSmall } from \"src/theme/CommonStyles\";\nimport ProgramSeries from \"./components/ProgramSeries/ProgramSeries\";\n\n/*\n *  Program Details\n *\n *  Information about the selected program\n *  Component used in this moduels are\n *    - Program Series - for generating tabs from program series\n *\n */\n\n/*\n *  Router Interface\n */\ninterface MatchParams {\n  id: string;\n}\ninterface MatchProps extends RouteComponentProps<MatchParams> {}\n\nfunction ProgramDetails({ match }: MatchProps): JSX.Element {\n  const dispatch = useDispatch();\n\n  // program info selector from App state\n  const programInfo: ProgramInfo = useSelector((state: AppStateType) => {\n    return state.programInfo;\n  });\n\n  // React hook to fetch program info data\n  useEffect(() => {\n    dispatch(loadProgramDetailsActions(match.params.id));\n  }, [match, dispatch]);\n\n  const { images, title, start, end } = programInfo || {};\n  return (\n    <>\n      {programInfo && (\n        <div>\n          {/* \n            For large banner with image and duration\n          */}\n          <ProgramBanner\n            image={images?.icon}\n            title={title}\n            start={start}\n            end={end}\n          ></ProgramBanner>\n\n          <div style={{ padding: \"10px 25px\" }}>\n            {/* \n            For  \n              - Channel name, time, day and month\n              - Programe title\n              - Year and genre\n\n          */}\n            <ProgramHeader {...programInfo}></ProgramHeader>\n\n            {/* \n            For program description\n          */}\n            <P>{programInfo.description}</P>\n\n            {/* \n            For cast\n          */}\n            <FlexRow>\n              <HeaderSmall>{\"Cast: \"}</HeaderSmall>\n              {programInfo?.meta?.cast?.map((item, index) => (\n                <HeaderSmall key={`cast_${index}`}>{item.name}</HeaderSmall>\n              ))}\n            </FlexRow>\n\n            {/* \n            For creators\n          */}\n            <FlexRow>\n              <HeaderSmall>{\"Creators: \"}</HeaderSmall>\n              {programInfo?.meta?.cast?.map((item, index) => (\n                <HeaderSmall key={`cast_${index}`}>{item.name}</HeaderSmall>\n              ))}\n            </FlexRow>\n\n            {/* \n            For tabs\n          */}\n            <ProgramSeries series={programInfo.series} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default ProgramDetails;\n","import RouteType from \"../interfaces/route.type\";\nimport Home from \"../@modules/home/Home\";\nimport ProgramDetails from \"../@modules/programDetails/ProgramDetails\";\nexport const appRoutes: RouteType[] = [\n  { path: \"/\", exact: true, component: Home },\n  { path: \"/home\", exact: false, component: Home },\n  { path: \"/show/:id\", exact: false, component: ProgramDetails },\n];\n\nexport default appRoutes;\n","import * as types from \"../actionTypes/programsActionTypes\";\nimport { epgServices } from \"../../../services/epgServices\";\nimport { ProgramInfo } from \"src/app/interfaces/programs.details.type\";\n\nimport data from \"./program.json\";\nexport const loadProgramActionSuccess = (\n  data: any\n): types.programsDetailsActionTypes => {\n  return {\n    type: types.FETCH_PROGRAMS_INFO_ACTION_SUCCESS,\n    payload: data,\n  };\n};\n\nexport const loadProgramAction = (): types.programsDetailsActionTypes => {\n  return {\n    type: types.FETCH_PROGRAMS_INFO_ACTION,\n  };\n};\n\nexport function loadProgramDetailsActions(id: string) {\n  return function (dispatch: (arg0: any) => void) {\n    dispatch(loadProgramAction());\n    dispatch(loadProgramActionSuccess(data[0]));\n    //API.programInfo.replace(\"$$\", id), for actual setup\n    // epgServices\n    //   .fetchEpgProgramData(\"/programInfo\")\n    //   .then((data: ProgramInfo[]) => {\n    //     dispatch(loadProgramActionSuccess(data[0]));\n    //   });\n  };\n}\n","import { ProgramInfo } from \"src/app/interfaces/programs.details.type\";\n\nexport const FETCH_PROGRAMS_INFO_ACTION_SUCCESS =\n  \"FETCH_PROGRAMS_INFO_ACTION_SUCCESS\";\nexport const FETCH_PROGRAMS_INFO_ACTION = \"FETCH_PROGRAMS_INFO_ACTION\";\n\nexport interface fetchProgramDetailsActionType {\n  type: typeof FETCH_PROGRAMS_INFO_ACTION;\n}\nexport interface LoadProgramDetailsActionType {\n  type: typeof FETCH_PROGRAMS_INFO_ACTION_SUCCESS;\n  payload: ProgramInfo;\n}\n\nexport type programsDetailsActionTypes =\n  | LoadProgramDetailsActionType\n  | fetchProgramDetailsActionType;\n","import React from \"react\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Header } from \"./app/layout\";\nimport BuildRoute from \"./app/shared/BuildRoute/BuildRoute\";\nimport { appRoutes } from \"./app/routes\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <BuildRoute routes={appRoutes} />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\nimport Theme from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n   \n\t::selection {\n\t\tcolor: ${Theme.colors.primary};\n\t\tbackground: ${Theme.colors.bg};\n\t}\n    html {\n\t\theight: 100%;\n\t  }\n\t  body,#root {\n\t\t\n\t  }\n\t  \n\tbody {\n\t\tmargin:0;\n\t\tfont-family: Tahoma;\n\t\tbackground: ${Theme.colors.bg};\n\t\tcolor: ${Theme.colors.primary};\n\t\t\n\t}\n   \n\t.shadow{\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: linear-gradient(0deg, black, transparent);\n\t}\n\th1, h2, h3, h4 {\n\t\tcolor: ${Theme.colors.white};\n\t}\n\n\n\n\tlabel {\n\t\tmargin-bottom: .5rem;\n\t\tcolor: ${Theme.colors.secondary};\n\t}\n\n\tinput, textarea {\n\t\tborder-radius: .5rem;\n\t\tborder: none;\n\t\tbackground: rgba(0, 0, 0, 0.05);\n\t\tpadding: .25rem 1rem;\n\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\t}\n\n\t.textRight {\n\t\ttext-align: right;\n\t}\n  \n`;\n\nexport default GlobalStyle;\n","import { AppStateType } from \"../interfaces/app.state.type\";\n\nconst initialState: AppStateType = {\n  channels: [],\n  programInfo: {},\n  otherStates: [],\n};\n\nexport default initialState;\n","import { combineReducers } from \"redux\";\nimport channelReducer from \"./channelReducer\";\nimport programReducer from \"./programInforReducer\";\nexport const rootReducer = combineReducers({\n  channels: channelReducer,\n  programInfo: programReducer,\n});\n","import * as types from \"../actionTypes/channelsActionTypes\";\nimport initialState from \"../initialState\";\n\nimport { channelsActionTypes } from \"../actionTypes/channelsActionTypes\";\nimport { Channels } from \"../../interfaces/channels.type\";\n\nexport default function channelReducer(\n  state: Channels[] = initialState.channels,\n  action: channelsActionTypes\n) {\n  switch (action.type) {\n    case types.LOAD_PROGRAMS_ACTION_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { AppStateType } from \"./../../interfaces/app.state.type\";\nimport * as types from \"../actionTypes/programsActionTypes\";\nimport initialState from \"../initialState\";\n\nimport { programsDetailsActionTypes } from \"../actionTypes/programsActionTypes\";\n\nexport default function programReducer(\n  state: AppStateType = initialState,\n  action: programsDetailsActionTypes\n) {\n  switch (action.type) {\n    case types.FETCH_PROGRAMS_INFO_ACTION_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { rootReducer } from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Store\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GlobalStyle from \"./theme/GlobalStyle\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nimport store from \"./app/stor/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <GlobalStyle />\n      <App />\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}